apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    architecture: standalone
    provider: bitnami
    type: mysql
  name: xmysqlinstances.bitnami.database.tanzu.vmware.com
spec:
  compositeTypeRef:
    apiVersion: bitnami.database.tanzu.vmware.com/v1alpha1
    kind: XMySQLInstance
  publishConnectionDetailsWithStoreConfigRef:
    name: default
  mode: Pipeline
  pipeline:
  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: namespace
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Namespace
            providerConfigRef:
              name: kubernetes-provider
        patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          type: FromCompositeFieldPath
      - name: release
        base:
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          spec:
            forProvider:
              chart:
                name: mysql
                repository: https://charts.bitnami.com/bitnami
                version: 9.5.0
              namespace: ""
              set:
              - name: fullnameOverride
                valueFrom:
                  secretKeyRef:
                    key: host
                    namespace: ""
              - name: primary.service.ports.mysql
                valueFrom:
                  secretKeyRef:
                    key: port
                    namespace: ""
              - name: auth.username
                valueFrom:
                  secretKeyRef:
                    key: username
                    namespace: ""
              - name: auth.database
                valueFrom:
                  secretKeyRef:
                    key: database
                    namespace: ""
              values:
                primary:
                  persistence:
                    size: 1
            providerConfigRef:
              name: helm-provider
        patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.set[0].valueFrom.secretKeyRef.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.set[1].valueFrom.secretKeyRef.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.set[2].valueFrom.secretKeyRef.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.set[3].valueFrom.secretKeyRef.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.values.auth.existingSecret
          type: FromCompositeFieldPath
        - fromFieldPath: spec.storageGB
          toFieldPath: spec.forProvider.values.primary.persistence.size
          transforms:
          - string:
              fmt: '%fGi'
              type: Format
            type: string
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.set[0].valueFrom.secretKeyRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.set[1].valueFrom.secretKeyRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.set[2].valueFrom.secretKeyRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.set[3].valueFrom.secretKeyRef.name
          type: FromCompositeFieldPath
      - name: secret
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            connectionDetails:
            - apiVersion: v1
              fieldPath: spec.clusterIP
              kind: Service
              namespace: ""
              toConnectionSecretKey: host
            - apiVersion: v1
              fieldPath: data.port
              kind: Secret
              namespace: ""
              toConnectionSecretKey: port
            - apiVersion: v1
              fieldPath: data.database
              kind: Secret
              namespace: ""
              toConnectionSecretKey: database
            - apiVersion: v1
              fieldPath: data.username
              kind: Secret
              namespace: ""
              toConnectionSecretKey: username
            - apiVersion: v1
              fieldPath: data.mysql-password
              kind: Secret
              namespace: ""
              toConnectionSecretKey: password
            forProvider:
              manifest:
                apiVersion: secretgen.k14s.io/v1alpha1
                kind: Password
                metadata:
                  namespace: ""
                spec:
                  length: 32
                  secretTemplate:
                    stringData:
                      mysql-password: $(value)
                      mysql-root-password: $(value)
                      port: "3306"
                      username: mysql
                    type: connection.crossplane.io/v1alpha1
            providerConfigRef:
              name: kubernetes-provider
            writeConnectionSecretToRef:
              namespace: crossplane-system
        connectionDetails:
        - fromConnectionSecretKey: host
          type: FromConnectionSecretKey
          name: host
        - fromConnectionSecretKey: port
          type: FromConnectionSecretKey
          name: port
        - fromConnectionSecretKey: database
          type: FromConnectionSecretKey
          name: database
        - fromConnectionSecretKey: username
          type: FromConnectionSecretKey
          name: username
        - fromConnectionSecretKey: password
          type: FromConnectionSecretKey
          name: password
        patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[0].namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[1].namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[2].namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[3].namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[4].namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.secretTemplate.stringData.database
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.secretTemplate.stringData.host
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.uid
          toFieldPath: spec.writeConnectionSecretToRef.name
          transforms:
          - string:
              fmt: '%s-mysql'
              type: Format
            type: string
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[0].name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[1].name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[2].name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[3].name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: spec.connectionDetails[4].name
          type: FromCompositeFieldPath
  - step: servicebinding-decorator
    functionRef:
      name: function-servicebinding-decorator
    input:
      apiVersion: fn.crossplane.servicebinding.io/v1alpha1
      kind: Decorator
      config:
        requireWriteConnectionSecretToRef: false
        providerConfigRef:
          name: kubernetes-provider
        bindingSecretOverrides:
          provider: bitnami
          type: mysql